{
  "title": "AI-Powered Content Generator",
  "description": "Intelligent content generation platform using OpenAI GPT-4 and custom fine-tuned models for creating blog posts, social media content, and marketing copy.",
  "stack": [
    "Next.js",
    "TypeScript",
    "OpenAI API",
    "Pinecone",
    "Stripe",
    "Vercel AI SDK"
  ],
  "repo": "https://github.com/drewwebdev/ai-content-generator",
  "live": "https://ai-content-gen.vercel.app",
  "thumbnail": "/images/projects/ai-content-generator.jpg",
  "featured": false,
  "sortOrder": 3,
  "body": {
    "raw": "\n# AI-Powered Content Generator\n\nAn intelligent content generation platform that leverages advanced AI models to create high-quality blog posts, social media content, and marketing copy. Built with Next.js 14 and integrated with OpenAI's GPT-4 API, this tool helps content creators and marketers streamline their workflow.\n\n## Project Overview\n\nThe AI Content Generator addresses the growing need for efficient, high-quality content creation in the digital marketing space. By combining the power of large language models with custom fine-tuning and intelligent prompt engineering, this platform delivers contextually relevant and engaging content across multiple formats.\n\n## Core Features\n\n### ðŸ¤– AI-Powered Generation\n- **Multiple Content Types**: Blog posts, social media captions, email campaigns, product descriptions\n- **Custom Templates**: Pre-built templates for different industries and use cases\n- **Tone Adjustment**: Professional, casual, creative, technical writing styles\n- **Length Control**: From short snippets to long-form articles\n\n### ðŸŽ¯ Smart Content Optimization\n- **SEO Integration**: Automatic keyword optimization and meta tag generation\n- **Readability Analysis**: Content scoring based on readability metrics\n- **Plagiarism Detection**: Built-in originality checking\n- **Brand Voice Consistency**: Custom brand voice training and enforcement\n\n### ðŸ“Š Analytics & Insights\n- **Performance Tracking**: Content engagement metrics\n- **A/B Testing**: Compare different content variations\n- **Usage Analytics**: Track generation history and preferences\n- **ROI Measurement**: Content performance correlation with business metrics\n\n## Technical Architecture\n\n### AI Integration Layer\n\n#### OpenAI API Integration\n```typescript\n// lib/ai/openai-client.ts\nimport OpenAI from 'openai'\nimport { ContentTemplate, GenerationParams } from '@/types/content'\n\nexport class AIContentGenerator {\n  private client: OpenAI\n\n  constructor() {\n    this.client = new OpenAI({\n      apiKey: process.env.OPENAI_API_KEY,\n    })\n  }\n\n  async generateContent(params: GenerationParams): Promise<string> {\n    const { template, topic, tone, length, keywords } = params\n\n    const systemPrompt = this.buildSystemPrompt(template, tone)\n    const userPrompt = this.buildUserPrompt(topic, length, keywords)\n\n    try {\n      const completion = await this.client.chat.completions.create({\n        model: 'gpt-4-turbo-preview',\n        messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: userPrompt }\n        ],\n        temperature: this.getTemperatureForTone(tone),\n        max_tokens: this.getMaxTokensForLength(length),\n        presence_penalty: 0.1,\n        frequency_penalty: 0.1,\n      })\n\n      return completion.choices[0]?.message?.content || ''\n    } catch (error) {\n      console.error('AI generation error:', error)\n      throw new AIGenerationError('Failed to generate content', error)\n    }\n  }\n\n  private buildSystemPrompt(template: ContentTemplate, tone: string): string {\n    return `You are an expert content writer specializing in ${template.category}.\n    \n    Guidelines:\n    - Write in a ${tone} tone\n    - Follow the ${template.name} format\n    - Ensure content is original and engaging\n    - Include relevant examples and actionable insights\n    - Optimize for readability and SEO when appropriate\n    \n    Template Structure:\n    ${template.structure}\n    \n    Writing Style:\n    ${this.getToneGuidelines(tone)}`\n  }\n\n  private buildUserPrompt(topic: string, length: string, keywords: string[]): string {\n    return `Create content about: ${topic}\n    \n    Target length: ${length}\n    ${keywords.length > 0 ? `Include these keywords naturally: ${keywords.join(', ')}` : ''}\n    \n    Focus on providing value to the reader while maintaining engagement throughout.`\n  }\n}\n```\n\n#### Custom Fine-Tuning Pipeline\n```typescript\n// lib/ai/fine-tuning.ts\nimport { OpenAI } from 'openai'\nimport { db } from '@/lib/db'\n\nexport class FineTuningManager {\n  private client: OpenAI\n\n  constructor() {\n    this.client = new OpenAI({\n      apiKey: process.env.OPENAI_API_KEY,\n    })\n  }\n\n  async prepareBrandTrainingData(brandId: string) {\n    // Collect brand-specific content samples\n    const brandContent = await db.brandContent.findMany({\n      where: { brandId },\n      include: { examples: true }\n    })\n\n    // Format for OpenAI fine-tuning\n    const trainingData = brandContent.map(content => ({\n      messages: [\n        { role: 'system', content: this.getBrandSystemPrompt(brandId) },\n        { role: 'user', content: content.prompt },\n        { role: 'assistant', content: content.response }\n      ]\n    }))\n\n    return this.formatForJSONL(trainingData)\n  }\n\n  async createFineTunedModel(brandId: string, trainingData: string) {\n    try {\n      // Upload training file\n      const file = await this.client.files.create({\n        file: new File([trainingData], 'training-data.jsonl'),\n        purpose: 'fine-tune'\n      })\n\n      // Create fine-tuning job\n      const fineTune = await this.client.fineTuning.jobs.create({\n        training_file: file.id,\n        model: 'gpt-3.5-turbo',\n        hyperparameters: {\n          n_epochs: 3,\n          batch_size: 4,\n          learning_rate_multiplier: 0.1\n        }\n      })\n\n      // Store job info in database\n      await db.fineTuneJob.create({\n        data: {\n          brandId,\n          jobId: fineTune.id,\n          status: 'pending',\n          fileId: file.id\n        }\n      })\n\n      return fineTune\n    } catch (error) {\n      console.error('Fine-tuning error:', error)\n      throw error\n    }\n  }\n}\n```\n\n### Content Processing Pipeline\n\n#### Template Engine\n```typescript\n// lib/content/template-engine.ts\ninterface ContentTemplate {\n  id: string\n  name: string\n  category: string\n  structure: TemplateSection[]\n  variables: TemplateVariable[]\n}\n\ninterface TemplateSection {\n  name: string\n  required: boolean\n  description: string\n  examples: string[]\n}\n\nexport class TemplateEngine {\n  private templates: Map<string, ContentTemplate> = new Map()\n\n  constructor() {\n    this.loadTemplates()\n  }\n\n  async generateFromTemplate(\n    templateId: string, \n    variables: Record<string, any>\n  ): Promise<string> {\n    const template = this.templates.get(templateId)\n    if (!template) {\n      throw new Error(`Template ${templateId} not found`)\n    }\n\n    // Validate required variables\n    this.validateVariables(template, variables)\n\n    // Build content using template structure\n    let content = ''\n    for (const section of template.structure) {\n      const sectionContent = await this.generateSection(section, variables)\n      content += sectionContent + '\\n\\n'\n    }\n\n    return content.trim()\n  }\n\n  private async generateSection(\n    section: TemplateSection, \n    variables: Record<string, any>\n  ): Promise<string> {\n    const prompt = `Generate a ${section.name} section for content about ${variables.topic}.\n    \n    Section Description: ${section.description}\n    \n    Examples of good ${section.name} sections:\n    ${section.examples.join('\\n---\\n')}\n    \n    Variables available:\n    ${Object.entries(variables).map(([key, value]) => `${key}: ${value}`).join('\\n')}\n    \n    Generate the section content:`\n\n    const aiClient = new AIContentGenerator()\n    return await aiClient.generateContent({\n      template: { structure: prompt },\n      topic: variables.topic,\n      tone: variables.tone || 'professional',\n      length: 'medium'\n    })\n  }\n}\n```\n\n#### Content Enhancement\n```typescript\n// lib/content/enhancer.ts\nimport { AIContentGenerator } from '@/lib/ai/openai-client'\n\nexport class ContentEnhancer {\n  private aiClient: AIContentGenerator\n\n  constructor() {\n    this.aiClient = new AIContentGenerator()\n  }\n\n  async optimizeForSEO(content: string, targetKeywords: string[]): Promise<string> {\n    const prompt = `Optimize the following content for SEO while maintaining natural readability:\n\n    Target Keywords: ${targetKeywords.join(', ')}\n    \n    Original Content:\n    ${content}\n    \n    Requirements:\n    - Include target keywords naturally (avoid keyword stuffing)\n    - Improve meta description potential\n    - Add semantic keywords and variations\n    - Maintain original tone and message\n    - Ensure content flows naturally\n    \n    Return the optimized content:`\n\n    return await this.aiClient.generateContent({\n      template: { structure: prompt },\n      topic: 'SEO optimization',\n      tone: 'professional',\n      length: 'maintain'\n    })\n  }\n\n  async improveReadability(content: string): Promise<{\n    improvedContent: string\n    readabilityScore: number\n    suggestions: string[]\n  }> {\n    // Analyze current readability\n    const currentScore = this.calculateReadabilityScore(content)\n    \n    if (currentScore >= 70) {\n      return { \n        improvedContent: content, \n        readabilityScore: currentScore,\n        suggestions: []\n      }\n    }\n\n    const prompt = `Improve the readability of this content while preserving its meaning:\n\n    Current Content:\n    ${content}\n    \n    Improvements needed:\n    - Simplify complex sentences\n    - Use shorter paragraphs\n    - Replace jargon with simpler terms\n    - Improve flow between ideas\n    - Make it more scannable\n    \n    Return the improved version:`\n\n    const improvedContent = await this.aiClient.generateContent({\n      template: { structure: prompt },\n      topic: 'content improvement',\n      tone: 'clear and accessible',\n      length: 'maintain'\n    })\n\n    const newScore = this.calculateReadabilityScore(improvedContent)\n    const suggestions = this.generateSuggestions(content, improvedContent)\n\n    return {\n      improvedContent,\n      readabilityScore: newScore,\n      suggestions\n    }\n  }\n\n  private calculateReadabilityScore(content: string): number {\n    // Implement Flesch Reading Ease or similar algorithm\n    const sentences = content.split(/[.!?]+/).length\n    const words = content.split(/\\s+/).length\n    const syllables = this.countSyllables(content)\n\n    const avgSentenceLength = words / sentences\n    const avgSyllablesPerWord = syllables / words\n\n    // Flesch Reading Ease formula\n    const score = 206.835 - (1.015 * avgSentenceLength) - (84.6 * avgSyllablesPerWord)\n    return Math.max(0, Math.min(100, score))\n  }\n}\n```\n\n### User Interface\n\n#### Generation Workflow\n```typescript\n// components/ContentGenerator/GenerationWorkflow.tsx\nimport { useState } from 'react'\nimport { ContentTemplate, GenerationParams } from '@/types/content'\n\ninterface GenerationWorkflowProps {\n  templates: ContentTemplate[]\n  onGenerate: (params: GenerationParams) => Promise<string>\n}\n\nexport const GenerationWorkflow: React.FC<GenerationWorkflowProps> = ({\n  templates,\n  onGenerate\n}) => {\n  const [currentStep, setCurrentStep] = useState(1)\n  const [params, setParams] = useState<Partial<GenerationParams>>({})\n  const [isGenerating, setIsGenerating] = useState(false)\n  const [generatedContent, setGeneratedContent] = useState('')\n\n  const steps = [\n    { id: 1, name: 'Template', component: TemplateSelector },\n    { id: 2, name: 'Parameters', component: ParametersForm },\n    { id: 3, name: 'Generate', component: GenerationStep },\n    { id: 4, name: 'Review', component: ContentReview }\n  ]\n\n  const handleGenerate = async () => {\n    setIsGenerating(true)\n    try {\n      const content = await onGenerate(params as GenerationParams)\n      setGeneratedContent(content)\n      setCurrentStep(4)\n    } catch (error) {\n      console.error('Generation failed:', error)\n    } finally {\n      setIsGenerating(false)\n    }\n  }\n\n  const CurrentStepComponent = steps.find(s => s.id === currentStep)?.component\n\n  return (\n    <div className=\"max-w-4xl mx-auto\">\n      {/* Progress Indicator */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between\">\n          {steps.map((step, index) => (\n            <div key={step.id} className=\"flex items-center\">\n              <div className={`\n                w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium\n                ${currentStep >= step.id \n                  ? 'bg-blue-600 text-white' \n                  : 'bg-gray-200 text-gray-600'\n                }\n              `}>\n                {step.id}\n              </div>\n              <span className=\"ml-2 text-sm font-medium text-gray-900\">\n                {step.name}\n              </span>\n              {index < steps.length - 1 && (\n                <div className={`\n                  w-16 h-0.5 mx-4\n                  ${currentStep > step.id ? 'bg-blue-600' : 'bg-gray-200'}\n                `} />\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Step Content */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        {CurrentStepComponent && (\n          <CurrentStepComponent\n            params={params}\n            onParamsChange={setParams}\n            templates={templates}\n            isGenerating={isGenerating}\n            generatedContent={generatedContent}\n            onGenerate={handleGenerate}\n            onNext={() => setCurrentStep(prev => prev + 1)}\n            onPrevious={() => setCurrentStep(prev => prev - 1)}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n```\n\n#### Real-Time Preview\n```typescript\n// components/ContentGenerator/LivePreview.tsx\nimport { useEffect, useState } from 'react'\nimport { debounce } from 'lodash'\n\ninterface LivePreviewProps {\n  content: string\n  onContentChange: (content: string) => void\n  readOnly?: boolean\n}\n\nexport const LivePreview: React.FC<LivePreviewProps> = ({\n  content,\n  onContentChange,\n  readOnly = false\n}) => {\n  const [previewMode, setPreviewMode] = useState<'edit' | 'preview'>('edit')\n  const [wordCount, setWordCount] = useState(0)\n  const [readingTime, setReadingTime] = useState(0)\n\n  const debouncedUpdate = debounce((newContent: string) => {\n    onContentChange(newContent)\n    updateMetrics(newContent)\n  }, 300)\n\n  const updateMetrics = (text: string) => {\n    const words = text.trim().split(/\\s+/).length\n    setWordCount(words)\n    setReadingTime(Math.ceil(words / 200)) // 200 words per minute\n  }\n\n  useEffect(() => {\n    updateMetrics(content)\n  }, [content])\n\n  return (\n    <div className=\"border border-gray-200 rounded-lg overflow-hidden\">\n      {/* Toolbar */}\n      <div className=\"bg-gray-50 px-4 py-2 border-b border-gray-200 flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex bg-white rounded-md\">\n            <button\n              className={`px-3 py-1 text-sm font-medium rounded-l-md ${\n                previewMode === 'edit' \n                  ? 'bg-blue-100 text-blue-700' \n                  : 'text-gray-500 hover:text-gray-700'\n              }`}\n              onClick={() => setPreviewMode('edit')}\n            >\n              Edit\n            </button>\n            <button\n              className={`px-3 py-1 text-sm font-medium rounded-r-md ${\n                previewMode === 'preview' \n                  ? 'bg-blue-100 text-blue-700' \n                  : 'text-gray-500 hover:text-gray-700'\n              }`}\n              onClick={() => setPreviewMode('preview')}\n            >\n              Preview\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n          <span>{wordCount} words</span>\n          <span>{readingTime} min read</span>\n        </div>\n      </div>\n\n      {/* Content Area */}\n      <div className=\"h-96\">\n        {previewMode === 'edit' ? (\n          <textarea\n            className=\"w-full h-full p-4 border-none resize-none focus:outline-none font-mono text-sm\"\n            value={content}\n            onChange={(e) => debouncedUpdate(e.target.value)}\n            readOnly={readOnly}\n            placeholder=\"Your generated content will appear here...\"\n          />\n        ) : (\n          <div className=\"h-full p-4 overflow-auto prose prose-sm max-w-none\">\n            <div dangerouslySetInnerHTML={{ __html: formatContent(content) }} />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nfunction formatContent(content: string): string {\n  // Convert markdown-like formatting to HTML\n  return content\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n    .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n    .replace(/\\n\\n/g, '</p><p>')\n    .replace(/\\n/g, '<br>')\n    .replace(/^/, '<p>')\n    .replace(/$/, '</p>')\n}\n```\n\n## Advanced Features\n\n### Batch Content Generation\n```typescript\n// lib/content/batch-generator.ts\nexport class BatchContentGenerator {\n  private queue: GenerationJob[] = []\n  private processing = false\n\n  async addBatchJob(job: BatchGenerationJob): Promise<string> {\n    const jobId = generateId()\n    \n    await db.batchJob.create({\n      data: {\n        id: jobId,\n        userId: job.userId,\n        status: 'pending',\n        totalItems: job.items.length,\n        completedItems: 0,\n        parameters: JSON.stringify(job.params)\n      }\n    })\n\n    // Add individual items to queue\n    job.items.forEach(item => {\n      this.queue.push({\n        jobId,\n        itemId: item.id,\n        params: { ...job.params, ...item.overrides }\n      })\n    })\n\n    this.processQueue()\n    return jobId\n  }\n\n  private async processQueue() {\n    if (this.processing || this.queue.length === 0) return\n    \n    this.processing = true\n    \n    while (this.queue.length > 0) {\n      const job = this.queue.shift()!\n      \n      try {\n        const content = await this.generateSingleContent(job.params)\n        \n        await db.generatedContent.create({\n          data: {\n            jobId: job.jobId,\n            itemId: job.itemId,\n            content,\n            status: 'completed'\n          }\n        })\n\n        // Update job progress\n        await this.updateJobProgress(job.jobId)\n        \n      } catch (error) {\n        console.error('Batch generation error:', error)\n        await this.handleJobError(job.jobId, job.itemId, error)\n      }\n    }\n    \n    this.processing = false\n  }\n}\n```\n\n### Content Analytics\n```typescript\n// lib/analytics/content-analytics.ts\nexport class ContentAnalytics {\n  async trackGeneration(userId: string, params: GenerationParams) {\n    await db.generationEvent.create({\n      data: {\n        userId,\n        templateId: params.template.id,\n        contentType: params.template.category,\n        wordCount: this.estimateWordCount(params),\n        timestamp: new Date()\n      }\n    })\n  }\n\n  async getUsageStats(userId: string, timeRange: string) {\n    const startDate = this.getStartDate(timeRange)\n    \n    const stats = await db.generationEvent.groupBy({\n      by: ['contentType'],\n      where: {\n        userId,\n        timestamp: { gte: startDate }\n      },\n      _count: { id: true },\n      _sum: { wordCount: true }\n    })\n\n    return {\n      totalGenerations: stats.reduce((sum, stat) => sum + stat._count.id, 0),\n      totalWords: stats.reduce((sum, stat) => sum + (stat._sum.wordCount || 0), 0),\n      byType: stats.map(stat => ({\n        type: stat.contentType,\n        count: stat._count.id,\n        words: stat._sum.wordCount || 0\n      }))\n    }\n  }\n\n  async getPopularTemplates(timeRange: string) {\n    const startDate = this.getStartDate(timeRange)\n    \n    return await db.generationEvent.groupBy({\n      by: ['templateId'],\n      where: {\n        timestamp: { gte: startDate }\n      },\n      _count: { id: true },\n      orderBy: { _count: { id: 'desc' } },\n      take: 10\n    })\n  }\n}\n```\n\n## Performance & Scalability\n\n### Rate Limiting\n```typescript\n// lib/rate-limiting/ai-usage.ts\nimport { Ratelimit } from '@upstash/ratelimit'\nimport { Redis } from '@upstash/redis'\n\nconst redis = new Redis({\n  url: process.env.UPSTASH_REDIS_REST_URL!,\n  token: process.env.UPSTASH_REDIS_REST_TOKEN!,\n})\n\nexport const aiRateLimit = new Ratelimit({\n  redis,\n  limiter: Ratelimit.slidingWindow(10, '1 m'), // 10 requests per minute\n  analytics: true,\n})\n\nexport const premiumAiRateLimit = new Ratelimit({\n  redis,\n  limiter: Ratelimit.slidingWindow(100, '1 m'), // 100 requests per minute for premium\n  analytics: true,\n})\n\nexport async function checkAIUsage(userId: string, isPremium: boolean = false) {\n  const rateLimit = isPremium ? premiumAiRateLimit : aiRateLimit\n  const { success, limit, reset, remaining } = await rateLimit.limit(userId)\n  \n  return {\n    allowed: success,\n    limit,\n    remaining,\n    resetTime: new Date(reset)\n  }\n}\n```\n\n### Caching Strategy\n```typescript\n// lib/cache/content-cache.ts\nexport class ContentCache {\n  private redis: Redis\n\n  constructor() {\n    this.redis = new Redis(process.env.REDIS_URL!)\n  }\n\n  private getCacheKey(params: GenerationParams): string {\n    const key = {\n      template: params.template.id,\n      topic: params.topic,\n      tone: params.tone,\n      length: params.length,\n      keywords: params.keywords?.sort()\n    }\n    return `content:${hashObject(key)}`\n  }\n\n  async get(params: GenerationParams): Promise<string | null> {\n    const key = this.getCacheKey(params)\n    return await this.redis.get(key)\n  }\n\n  async set(params: GenerationParams, content: string, ttl: number = 3600) {\n    const key = this.getCacheKey(params)\n    await this.redis.setex(key, ttl, content)\n  }\n\n  async invalidatePattern(pattern: string) {\n    const keys = await this.redis.keys(pattern)\n    if (keys.length > 0) {\n      await this.redis.del(...keys)\n    }\n  }\n}\n```\n\nThis AI-powered content generator showcases the integration of advanced AI capabilities with modern web application architecture, demonstrating practical applications of large language models in content creation workflows.\n",
    "code": "var Component=(()=>{var ie=Object.create;var p=Object.defineProperty;var se=Object.getOwnPropertyDescriptor;var oe=Object.getOwnPropertyNames;var le=Object.getPrototypeOf,de=Object.prototype.hasOwnProperty;var N=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),ce=(r,e)=>{for(var l in e)p(r,l,{get:e[l],enumerable:!0})},E=(r,e,l,_)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let d of oe(e))!de.call(r,d)&&d!==l&&p(r,d,{get:()=>e[d],enumerable:!(_=se(e,d))||_.enumerable});return r};var me=(r,e,l)=>(l=r!=null?ie(le(r)):{},E(e||!r||!r.__esModule?p(l,\"default\",{value:r,enumerable:!0}):l,r)),ue=r=>E(p({},\"__esModule\",{value:!0}),r);var A=N((ge,R)=>{R.exports=React});var O=N(y=>{\"use strict\";(function(){function r(t){if(t==null)return null;if(typeof t==\"function\")return t.$$typeof===ee?null:t.displayName||t.name||null;if(typeof t==\"string\")return t;switch(t){case h:return\"Fragment\";case q:return\"Profiler\";case B:return\"StrictMode\";case X:return\"Suspense\";case H:return\"SuspenseList\";case Z:return\"Activity\"}if(typeof t==\"object\")switch(typeof t.tag==\"number\"&&console.error(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),t.$$typeof){case z:return\"Portal\";case V:return(t.displayName||\"Context\")+\".Provider\";case K:return(t._context.displayName||\"Context\")+\".Consumer\";case J:var a=t.render;return t=t.displayName,t||(t=a.displayName||a.name||\"\",t=t!==\"\"?\"ForwardRef(\"+t+\")\":\"ForwardRef\"),t;case Q:return a=t.displayName||null,a!==null?a:r(t.type)||\"Memo\";case v:a=t._payload,t=t._init;try{return r(t(a))}catch{}}return null}function e(t){return\"\"+t}function l(t){try{e(t);var a=!1}catch{a=!0}if(a){a=console;var i=a.error,o=typeof Symbol==\"function\"&&Symbol.toStringTag&&t[Symbol.toStringTag]||t.constructor.name||\"Object\";return i.call(a,\"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",o),e(t)}}function _(t){if(t===h)return\"<>\";if(typeof t==\"object\"&&t!==null&&t.$$typeof===v)return\"<...>\";try{var a=r(t);return a?\"<\"+a+\">\":\"<...>\"}catch{return\"<...>\"}}function d(){var t=U.A;return t===null?null:t.getOwner()}function x(){return Error(\"react-stack-top-frame\")}function D(t){if(C.call(t,\"key\")){var a=Object.getOwnPropertyDescriptor(t,\"key\").get;if(a&&a.isReactWarning)return!1}return t.key!==void 0}function M(t,a){function i(){S||(S=!0,console.error(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",a))}i.isReactWarning=!0,Object.defineProperty(t,\"key\",{get:i,configurable:!0})}function F(){var t=r(this.type);return T[t]||(T[t]=!0,console.error(\"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\")),t=this.props.ref,t!==void 0?t:null}function W(t,a,i,o,c,m,u,g){return i=m.ref,t={$$typeof:P,type:t,key:a,props:m,_owner:c},(i!==void 0?i:null)!==null?Object.defineProperty(t,\"ref\",{enumerable:!1,get:F}):Object.defineProperty(t,\"ref\",{enumerable:!1,value:null}),t._store={},Object.defineProperty(t._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:0}),Object.defineProperty(t,\"_debugInfo\",{configurable:!1,enumerable:!1,writable:!0,value:null}),Object.defineProperty(t,\"_debugStack\",{configurable:!1,enumerable:!1,writable:!0,value:u}),Object.defineProperty(t,\"_debugTask\",{configurable:!1,enumerable:!1,writable:!0,value:g}),Object.freeze&&(Object.freeze(t.props),Object.freeze(t)),t}function Y(t,a,i,o,c,m,u,g){var s=a.children;if(s!==void 0)if(o)if(ne(s)){for(o=0;o<s.length;o++)j(s[o]);Object.freeze&&Object.freeze(s)}else console.error(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else j(s);if(C.call(a,\"key\")){s=r(t);var f=Object.keys(a).filter(function(re){return re!==\"key\"});o=0<f.length?\"{key: someKey, \"+f.join(\": ..., \")+\": ...}\":\"{key: someKey}\",I[s+o]||(f=0<f.length?\"{\"+f.join(\": ..., \")+\": ...}\":\"{}\",console.error(`A props object containing a \"key\" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />`,o,s,f,s),I[s+o]=!0)}if(s=null,i!==void 0&&(l(i),s=\"\"+i),D(a)&&(l(a.key),s=\"\"+a.key),\"key\"in a){i={};for(var w in a)w!==\"key\"&&(i[w]=a[w])}else i=a;return s&&M(i,typeof t==\"function\"?t.displayName||t.name||\"Unknown\":t),W(t,s,m,c,d(),i,u,g)}function j(t){typeof t==\"object\"&&t!==null&&t.$$typeof===P&&t._store&&(t._store.validated=1)}var b=A(),P=Symbol.for(\"react.transitional.element\"),z=Symbol.for(\"react.portal\"),h=Symbol.for(\"react.fragment\"),B=Symbol.for(\"react.strict_mode\"),q=Symbol.for(\"react.profiler\");Symbol.for(\"react.provider\");var K=Symbol.for(\"react.consumer\"),V=Symbol.for(\"react.context\"),J=Symbol.for(\"react.forward_ref\"),X=Symbol.for(\"react.suspense\"),H=Symbol.for(\"react.suspense_list\"),Q=Symbol.for(\"react.memo\"),v=Symbol.for(\"react.lazy\"),Z=Symbol.for(\"react.activity\"),ee=Symbol.for(\"react.client.reference\"),U=b.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,C=Object.prototype.hasOwnProperty,ne=Array.isArray,k=console.createTask?console.createTask:function(){return null};b={\"react-stack-bottom-frame\":function(t){return t()}};var S,T={},te=b[\"react-stack-bottom-frame\"].bind(b,x)(),ae=k(_(x)),I={};y.Fragment=h,y.jsxDEV=function(t,a,i,o,c,m){var u=1e4>U.recentlyCreatedOwnerStacks++;return Y(t,a,i,o,c,m,u?Error(\"react-stack-top-frame\"):te,u?k(_(t)):ae)}})()});var L=N((Ne,G)=>{\"use strict\";G.exports=O()});var pe={};ce(pe,{default:()=>be,frontmatter:()=>fe});var n=me(L()),fe={title:\"AI-Powered Content Generator\",description:\"Intelligent content generation platform using OpenAI GPT-4 and custom fine-tuned models for creating blog posts, social media content, and marketing copy.\",stack:[\"Next.js\",\"TypeScript\",\"OpenAI API\",\"Pinecone\",\"Stripe\",\"Vercel AI SDK\"],repo:\"https://github.com/drewwebdev/ai-content-generator\",live:\"https://ai-content-gen.vercel.app\",thumbnail:\"/images/projects/ai-content-generator.jpg\",featured:!1,sortOrder:3};function $(r){let e=Object.assign({h1:\"h1\",a:\"a\",span:\"span\",p:\"p\",h2:\"h2\",h3:\"h3\",ul:\"ul\",li:\"li\",strong:\"strong\",h4:\"h4\",pre:\"pre\",code:\"code\"},r.components);return(0,n.jsxDEV)(n.Fragment,{children:[(0,n.jsxDEV)(e.h1,{id:\"ai-powered-content-generator\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#ai-powered-content-generator\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"AI-Powered Content Generator\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:12,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"An intelligent content generation platform that leverages advanced AI models to create high-quality blog posts, social media content, and marketing copy. Built with Next.js 14 and integrated with OpenAI's GPT-4 API, this tool helps content creators and marketers streamline their workflow.\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:14,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"project-overview\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#project-overview\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Project Overview\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:16,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"The AI Content Generator addresses the growing need for efficient, high-quality content creation in the digital marketing space. By combining the power of large language models with custom fine-tuning and intelligent prompt engineering, this platform delivers contextually relevant and engaging content across multiple formats.\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:18,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"core-features\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#core-features\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Core Features\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:20,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h3,{id:\"-ai-powered-generation\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#-ai-powered-generation\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"\\u{1F916} AI-Powered Generation\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:22,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.ul,{children:[`\n`,(0,n.jsxDEV)(e.li,{children:[(0,n.jsxDEV)(e.strong,{children:\"Multiple Content Types\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:23,columnNumber:3},this),\": Blog posts, social media captions, email campaigns, product descriptions\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:23,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[(0,n.jsxDEV)(e.strong,{children:\"Custom Templates\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:24,columnNumber:3},this),\": Pre-built templates for different industries and use cases\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:24,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[(0,n.jsxDEV)(e.strong,{children:\"Tone Adjustment\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:25,columnNumber:3},this),\": Professional, casual, creative, technical writing styles\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:25,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[(0,n.jsxDEV)(e.strong,{children:\"Length Control\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:26,columnNumber:3},this),\": From short snippets to long-form articles\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:26,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:23,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h3,{id:\"-smart-content-optimization\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#-smart-content-optimization\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"\\u{1F3AF} Smart Content Optimization\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:28,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.ul,{children:[`\n`,(0,n.jsxDEV)(e.li,{children:[(0,n.jsxDEV)(e.strong,{children:\"SEO Integration\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:29,columnNumber:3},this),\": Automatic keyword optimization and meta tag generation\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[(0,n.jsxDEV)(e.strong,{children:\"Readability Analysis\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:30,columnNumber:3},this),\": Content scoring based on readability metrics\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:30,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[(0,n.jsxDEV)(e.strong,{children:\"Plagiarism Detection\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:31,columnNumber:3},this),\": Built-in originality checking\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:31,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[(0,n.jsxDEV)(e.strong,{children:\"Brand Voice Consistency\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:32,columnNumber:3},this),\": Custom brand voice training and enforcement\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:32,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h3,{id:\"-analytics--insights\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#-analytics--insights\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"\\u{1F4CA} Analytics & Insights\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:34,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.ul,{children:[`\n`,(0,n.jsxDEV)(e.li,{children:[(0,n.jsxDEV)(e.strong,{children:\"Performance Tracking\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:35,columnNumber:3},this),\": Content engagement metrics\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:35,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[(0,n.jsxDEV)(e.strong,{children:\"A/B Testing\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:36,columnNumber:3},this),\": Compare different content variations\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:36,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[(0,n.jsxDEV)(e.strong,{children:\"Usage Analytics\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:37,columnNumber:3},this),\": Track generation history and preferences\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:37,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[(0,n.jsxDEV)(e.strong,{children:\"ROI Measurement\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:38,columnNumber:3},this),\": Content performance correlation with business metrics\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:38,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:35,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"technical-architecture\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#technical-architecture\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Technical Architecture\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:40,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h3,{id:\"ai-integration-layer\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#ai-integration-layer\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"AI Integration Layer\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:42,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h4,{id:\"openai-api-integration\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#openai-api-integration\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"OpenAI API Integration\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:44,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.pre,{children:(0,n.jsxDEV)(e.code,{className:\"language-typescript\",children:`// lib/ai/openai-client.ts\nimport OpenAI from 'openai'\nimport { ContentTemplate, GenerationParams } from '@/types/content'\n\nexport class AIContentGenerator {\n  private client: OpenAI\n\n  constructor() {\n    this.client = new OpenAI({\n      apiKey: process.env.OPENAI_API_KEY,\n    })\n  }\n\n  async generateContent(params: GenerationParams): Promise<string> {\n    const { template, topic, tone, length, keywords } = params\n\n    const systemPrompt = this.buildSystemPrompt(template, tone)\n    const userPrompt = this.buildUserPrompt(topic, length, keywords)\n\n    try {\n      const completion = await this.client.chat.completions.create({\n        model: 'gpt-4-turbo-preview',\n        messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: userPrompt }\n        ],\n        temperature: this.getTemperatureForTone(tone),\n        max_tokens: this.getMaxTokensForLength(length),\n        presence_penalty: 0.1,\n        frequency_penalty: 0.1,\n      })\n\n      return completion.choices[0]?.message?.content || ''\n    } catch (error) {\n      console.error('AI generation error:', error)\n      throw new AIGenerationError('Failed to generate content', error)\n    }\n  }\n\n  private buildSystemPrompt(template: ContentTemplate, tone: string): string {\n    return \\`You are an expert content writer specializing in \\${template.category}.\n    \n    Guidelines:\n    - Write in a \\${tone} tone\n    - Follow the \\${template.name} format\n    - Ensure content is original and engaging\n    - Include relevant examples and actionable insights\n    - Optimize for readability and SEO when appropriate\n    \n    Template Structure:\n    \\${template.structure}\n    \n    Writing Style:\n    \\${this.getToneGuidelines(tone)}\\`\n  }\n\n  private buildUserPrompt(topic: string, length: string, keywords: string[]): string {\n    return \\`Create content about: \\${topic}\n    \n    Target length: \\${length}\n    \\${keywords.length > 0 ? \\`Include these keywords naturally: \\${keywords.join(', ')}\\` : ''}\n    \n    Focus on providing value to the reader while maintaining engagement throughout.\\`\n  }\n}\n`},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:45,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:45,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h4,{id:\"custom-fine-tuning-pipeline\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#custom-fine-tuning-pipeline\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Custom Fine-Tuning Pipeline\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:113,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.pre,{children:(0,n.jsxDEV)(e.code,{className:\"language-typescript\",children:`// lib/ai/fine-tuning.ts\nimport { OpenAI } from 'openai'\nimport { db } from '@/lib/db'\n\nexport class FineTuningManager {\n  private client: OpenAI\n\n  constructor() {\n    this.client = new OpenAI({\n      apiKey: process.env.OPENAI_API_KEY,\n    })\n  }\n\n  async prepareBrandTrainingData(brandId: string) {\n    // Collect brand-specific content samples\n    const brandContent = await db.brandContent.findMany({\n      where: { brandId },\n      include: { examples: true }\n    })\n\n    // Format for OpenAI fine-tuning\n    const trainingData = brandContent.map(content => ({\n      messages: [\n        { role: 'system', content: this.getBrandSystemPrompt(brandId) },\n        { role: 'user', content: content.prompt },\n        { role: 'assistant', content: content.response }\n      ]\n    }))\n\n    return this.formatForJSONL(trainingData)\n  }\n\n  async createFineTunedModel(brandId: string, trainingData: string) {\n    try {\n      // Upload training file\n      const file = await this.client.files.create({\n        file: new File([trainingData], 'training-data.jsonl'),\n        purpose: 'fine-tune'\n      })\n\n      // Create fine-tuning job\n      const fineTune = await this.client.fineTuning.jobs.create({\n        training_file: file.id,\n        model: 'gpt-3.5-turbo',\n        hyperparameters: {\n          n_epochs: 3,\n          batch_size: 4,\n          learning_rate_multiplier: 0.1\n        }\n      })\n\n      // Store job info in database\n      await db.fineTuneJob.create({\n        data: {\n          brandId,\n          jobId: fineTune.id,\n          status: 'pending',\n          fileId: file.id\n        }\n      })\n\n      return fineTune\n    } catch (error) {\n      console.error('Fine-tuning error:', error)\n      throw error\n    }\n  }\n}\n`},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:114,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:114,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h3,{id:\"content-processing-pipeline\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#content-processing-pipeline\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Content Processing Pipeline\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:185,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h4,{id:\"template-engine\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#template-engine\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Template Engine\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:187,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.pre,{children:(0,n.jsxDEV)(e.code,{className:\"language-typescript\",children:`// lib/content/template-engine.ts\ninterface ContentTemplate {\n  id: string\n  name: string\n  category: string\n  structure: TemplateSection[]\n  variables: TemplateVariable[]\n}\n\ninterface TemplateSection {\n  name: string\n  required: boolean\n  description: string\n  examples: string[]\n}\n\nexport class TemplateEngine {\n  private templates: Map<string, ContentTemplate> = new Map()\n\n  constructor() {\n    this.loadTemplates()\n  }\n\n  async generateFromTemplate(\n    templateId: string, \n    variables: Record<string, any>\n  ): Promise<string> {\n    const template = this.templates.get(templateId)\n    if (!template) {\n      throw new Error(\\`Template \\${templateId} not found\\`)\n    }\n\n    // Validate required variables\n    this.validateVariables(template, variables)\n\n    // Build content using template structure\n    let content = ''\n    for (const section of template.structure) {\n      const sectionContent = await this.generateSection(section, variables)\n      content += sectionContent + '\\\\n\\\\n'\n    }\n\n    return content.trim()\n  }\n\n  private async generateSection(\n    section: TemplateSection, \n    variables: Record<string, any>\n  ): Promise<string> {\n    const prompt = \\`Generate a \\${section.name} section for content about \\${variables.topic}.\n    \n    Section Description: \\${section.description}\n    \n    Examples of good \\${section.name} sections:\n    \\${section.examples.join('\\\\n---\\\\n')}\n    \n    Variables available:\n    \\${Object.entries(variables).map(([key, value]) => \\`\\${key}: \\${value}\\`).join('\\\\n')}\n    \n    Generate the section content:\\`\n\n    const aiClient = new AIContentGenerator()\n    return await aiClient.generateContent({\n      template: { structure: prompt },\n      topic: variables.topic,\n      tone: variables.tone || 'professional',\n      length: 'medium'\n    })\n  }\n}\n`},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:188,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:188,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h4,{id:\"content-enhancement\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#content-enhancement\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Content Enhancement\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:261,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.pre,{children:(0,n.jsxDEV)(e.code,{className:\"language-typescript\",children:`// lib/content/enhancer.ts\nimport { AIContentGenerator } from '@/lib/ai/openai-client'\n\nexport class ContentEnhancer {\n  private aiClient: AIContentGenerator\n\n  constructor() {\n    this.aiClient = new AIContentGenerator()\n  }\n\n  async optimizeForSEO(content: string, targetKeywords: string[]): Promise<string> {\n    const prompt = \\`Optimize the following content for SEO while maintaining natural readability:\n\n    Target Keywords: \\${targetKeywords.join(', ')}\n    \n    Original Content:\n    \\${content}\n    \n    Requirements:\n    - Include target keywords naturally (avoid keyword stuffing)\n    - Improve meta description potential\n    - Add semantic keywords and variations\n    - Maintain original tone and message\n    - Ensure content flows naturally\n    \n    Return the optimized content:\\`\n\n    return await this.aiClient.generateContent({\n      template: { structure: prompt },\n      topic: 'SEO optimization',\n      tone: 'professional',\n      length: 'maintain'\n    })\n  }\n\n  async improveReadability(content: string): Promise<{\n    improvedContent: string\n    readabilityScore: number\n    suggestions: string[]\n  }> {\n    // Analyze current readability\n    const currentScore = this.calculateReadabilityScore(content)\n    \n    if (currentScore >= 70) {\n      return { \n        improvedContent: content, \n        readabilityScore: currentScore,\n        suggestions: []\n      }\n    }\n\n    const prompt = \\`Improve the readability of this content while preserving its meaning:\n\n    Current Content:\n    \\${content}\n    \n    Improvements needed:\n    - Simplify complex sentences\n    - Use shorter paragraphs\n    - Replace jargon with simpler terms\n    - Improve flow between ideas\n    - Make it more scannable\n    \n    Return the improved version:\\`\n\n    const improvedContent = await this.aiClient.generateContent({\n      template: { structure: prompt },\n      topic: 'content improvement',\n      tone: 'clear and accessible',\n      length: 'maintain'\n    })\n\n    const newScore = this.calculateReadabilityScore(improvedContent)\n    const suggestions = this.generateSuggestions(content, improvedContent)\n\n    return {\n      improvedContent,\n      readabilityScore: newScore,\n      suggestions\n    }\n  }\n\n  private calculateReadabilityScore(content: string): number {\n    // Implement Flesch Reading Ease or similar algorithm\n    const sentences = content.split(/[.!?]+/).length\n    const words = content.split(/\\\\s+/).length\n    const syllables = this.countSyllables(content)\n\n    const avgSentenceLength = words / sentences\n    const avgSyllablesPerWord = syllables / words\n\n    // Flesch Reading Ease formula\n    const score = 206.835 - (1.015 * avgSentenceLength) - (84.6 * avgSyllablesPerWord)\n    return Math.max(0, Math.min(100, score))\n  }\n}\n`},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:262,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:262,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h3,{id:\"user-interface\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#user-interface\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"User Interface\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:361,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h4,{id:\"generation-workflow\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#generation-workflow\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Generation Workflow\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:363,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.pre,{children:(0,n.jsxDEV)(e.code,{className:\"language-typescript\",children:`// components/ContentGenerator/GenerationWorkflow.tsx\nimport { useState } from 'react'\nimport { ContentTemplate, GenerationParams } from '@/types/content'\n\ninterface GenerationWorkflowProps {\n  templates: ContentTemplate[]\n  onGenerate: (params: GenerationParams) => Promise<string>\n}\n\nexport const GenerationWorkflow: React.FC<GenerationWorkflowProps> = ({\n  templates,\n  onGenerate\n}) => {\n  const [currentStep, setCurrentStep] = useState(1)\n  const [params, setParams] = useState<Partial<GenerationParams>>({})\n  const [isGenerating, setIsGenerating] = useState(false)\n  const [generatedContent, setGeneratedContent] = useState('')\n\n  const steps = [\n    { id: 1, name: 'Template', component: TemplateSelector },\n    { id: 2, name: 'Parameters', component: ParametersForm },\n    { id: 3, name: 'Generate', component: GenerationStep },\n    { id: 4, name: 'Review', component: ContentReview }\n  ]\n\n  const handleGenerate = async () => {\n    setIsGenerating(true)\n    try {\n      const content = await onGenerate(params as GenerationParams)\n      setGeneratedContent(content)\n      setCurrentStep(4)\n    } catch (error) {\n      console.error('Generation failed:', error)\n    } finally {\n      setIsGenerating(false)\n    }\n  }\n\n  const CurrentStepComponent = steps.find(s => s.id === currentStep)?.component\n\n  return (\n    <div className=\"max-w-4xl mx-auto\">\n      {/* Progress Indicator */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between\">\n          {steps.map((step, index) => (\n            <div key={step.id} className=\"flex items-center\">\n              <div className={\\`\n                w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium\n                \\${currentStep >= step.id \n                  ? 'bg-blue-600 text-white' \n                  : 'bg-gray-200 text-gray-600'\n                }\n              \\`}>\n                {step.id}\n              </div>\n              <span className=\"ml-2 text-sm font-medium text-gray-900\">\n                {step.name}\n              </span>\n              {index < steps.length - 1 && (\n                <div className={\\`\n                  w-16 h-0.5 mx-4\n                  \\${currentStep > step.id ? 'bg-blue-600' : 'bg-gray-200'}\n                \\`} />\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Step Content */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        {CurrentStepComponent && (\n          <CurrentStepComponent\n            params={params}\n            onParamsChange={setParams}\n            templates={templates}\n            isGenerating={isGenerating}\n            generatedContent={generatedContent}\n            onGenerate={handleGenerate}\n            onNext={() => setCurrentStep(prev => prev + 1)}\n            onPrevious={() => setCurrentStep(prev => prev - 1)}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n`},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:364,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:364,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h4,{id:\"real-time-preview\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#real-time-preview\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Real-Time Preview\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:455,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.pre,{children:(0,n.jsxDEV)(e.code,{className:\"language-typescript\",children:`// components/ContentGenerator/LivePreview.tsx\nimport { useEffect, useState } from 'react'\nimport { debounce } from 'lodash'\n\ninterface LivePreviewProps {\n  content: string\n  onContentChange: (content: string) => void\n  readOnly?: boolean\n}\n\nexport const LivePreview: React.FC<LivePreviewProps> = ({\n  content,\n  onContentChange,\n  readOnly = false\n}) => {\n  const [previewMode, setPreviewMode] = useState<'edit' | 'preview'>('edit')\n  const [wordCount, setWordCount] = useState(0)\n  const [readingTime, setReadingTime] = useState(0)\n\n  const debouncedUpdate = debounce((newContent: string) => {\n    onContentChange(newContent)\n    updateMetrics(newContent)\n  }, 300)\n\n  const updateMetrics = (text: string) => {\n    const words = text.trim().split(/\\\\s+/).length\n    setWordCount(words)\n    setReadingTime(Math.ceil(words / 200)) // 200 words per minute\n  }\n\n  useEffect(() => {\n    updateMetrics(content)\n  }, [content])\n\n  return (\n    <div className=\"border border-gray-200 rounded-lg overflow-hidden\">\n      {/* Toolbar */}\n      <div className=\"bg-gray-50 px-4 py-2 border-b border-gray-200 flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex bg-white rounded-md\">\n            <button\n              className={\\`px-3 py-1 text-sm font-medium rounded-l-md \\${\n                previewMode === 'edit' \n                  ? 'bg-blue-100 text-blue-700' \n                  : 'text-gray-500 hover:text-gray-700'\n              }\\`}\n              onClick={() => setPreviewMode('edit')}\n            >\n              Edit\n            </button>\n            <button\n              className={\\`px-3 py-1 text-sm font-medium rounded-r-md \\${\n                previewMode === 'preview' \n                  ? 'bg-blue-100 text-blue-700' \n                  : 'text-gray-500 hover:text-gray-700'\n              }\\`}\n              onClick={() => setPreviewMode('preview')}\n            >\n              Preview\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n          <span>{wordCount} words</span>\n          <span>{readingTime} min read</span>\n        </div>\n      </div>\n\n      {/* Content Area */}\n      <div className=\"h-96\">\n        {previewMode === 'edit' ? (\n          <textarea\n            className=\"w-full h-full p-4 border-none resize-none focus:outline-none font-mono text-sm\"\n            value={content}\n            onChange={(e) => debouncedUpdate(e.target.value)}\n            readOnly={readOnly}\n            placeholder=\"Your generated content will appear here...\"\n          />\n        ) : (\n          <div className=\"h-full p-4 overflow-auto prose prose-sm max-w-none\">\n            <div dangerouslySetInnerHTML={{ __html: formatContent(content) }} />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nfunction formatContent(content: string): string {\n  // Convert markdown-like formatting to HTML\n  return content\n    .replace(/\\\\*\\\\*(.*?)\\\\*\\\\*/g, '<strong>$1</strong>')\n    .replace(/\\\\*(.*?)\\\\*/g, '<em>$1</em>')\n    .replace(/\\\\n\\\\n/g, '</p><p>')\n    .replace(/\\\\n/g, '<br>')\n    .replace(/^/, '<p>')\n    .replace(/$/, '</p>')\n}\n`},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:456,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:456,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"advanced-features\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advanced-features\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Advanced Features\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:558,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h3,{id:\"batch-content-generation\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#batch-content-generation\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Batch Content Generation\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:560,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.pre,{children:(0,n.jsxDEV)(e.code,{className:\"language-typescript\",children:`// lib/content/batch-generator.ts\nexport class BatchContentGenerator {\n  private queue: GenerationJob[] = []\n  private processing = false\n\n  async addBatchJob(job: BatchGenerationJob): Promise<string> {\n    const jobId = generateId()\n    \n    await db.batchJob.create({\n      data: {\n        id: jobId,\n        userId: job.userId,\n        status: 'pending',\n        totalItems: job.items.length,\n        completedItems: 0,\n        parameters: JSON.stringify(job.params)\n      }\n    })\n\n    // Add individual items to queue\n    job.items.forEach(item => {\n      this.queue.push({\n        jobId,\n        itemId: item.id,\n        params: { ...job.params, ...item.overrides }\n      })\n    })\n\n    this.processQueue()\n    return jobId\n  }\n\n  private async processQueue() {\n    if (this.processing || this.queue.length === 0) return\n    \n    this.processing = true\n    \n    while (this.queue.length > 0) {\n      const job = this.queue.shift()!\n      \n      try {\n        const content = await this.generateSingleContent(job.params)\n        \n        await db.generatedContent.create({\n          data: {\n            jobId: job.jobId,\n            itemId: job.itemId,\n            content,\n            status: 'completed'\n          }\n        })\n\n        // Update job progress\n        await this.updateJobProgress(job.jobId)\n        \n      } catch (error) {\n        console.error('Batch generation error:', error)\n        await this.handleJobError(job.jobId, job.itemId, error)\n      }\n    }\n    \n    this.processing = false\n  }\n}\n`},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:561,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:561,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h3,{id:\"content-analytics\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#content-analytics\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Content Analytics\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:628,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.pre,{children:(0,n.jsxDEV)(e.code,{className:\"language-typescript\",children:`// lib/analytics/content-analytics.ts\nexport class ContentAnalytics {\n  async trackGeneration(userId: string, params: GenerationParams) {\n    await db.generationEvent.create({\n      data: {\n        userId,\n        templateId: params.template.id,\n        contentType: params.template.category,\n        wordCount: this.estimateWordCount(params),\n        timestamp: new Date()\n      }\n    })\n  }\n\n  async getUsageStats(userId: string, timeRange: string) {\n    const startDate = this.getStartDate(timeRange)\n    \n    const stats = await db.generationEvent.groupBy({\n      by: ['contentType'],\n      where: {\n        userId,\n        timestamp: { gte: startDate }\n      },\n      _count: { id: true },\n      _sum: { wordCount: true }\n    })\n\n    return {\n      totalGenerations: stats.reduce((sum, stat) => sum + stat._count.id, 0),\n      totalWords: stats.reduce((sum, stat) => sum + (stat._sum.wordCount || 0), 0),\n      byType: stats.map(stat => ({\n        type: stat.contentType,\n        count: stat._count.id,\n        words: stat._sum.wordCount || 0\n      }))\n    }\n  }\n\n  async getPopularTemplates(timeRange: string) {\n    const startDate = this.getStartDate(timeRange)\n    \n    return await db.generationEvent.groupBy({\n      by: ['templateId'],\n      where: {\n        timestamp: { gte: startDate }\n      },\n      _count: { id: true },\n      orderBy: { _count: { id: 'desc' } },\n      take: 10\n    })\n  }\n}\n`},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:629,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:629,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"performance--scalability\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#performance--scalability\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Performance & Scalability\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:684,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h3,{id:\"rate-limiting\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#rate-limiting\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Rate Limiting\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:686,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.pre,{children:(0,n.jsxDEV)(e.code,{className:\"language-typescript\",children:`// lib/rate-limiting/ai-usage.ts\nimport { Ratelimit } from '@upstash/ratelimit'\nimport { Redis } from '@upstash/redis'\n\nconst redis = new Redis({\n  url: process.env.UPSTASH_REDIS_REST_URL!,\n  token: process.env.UPSTASH_REDIS_REST_TOKEN!,\n})\n\nexport const aiRateLimit = new Ratelimit({\n  redis,\n  limiter: Ratelimit.slidingWindow(10, '1 m'), // 10 requests per minute\n  analytics: true,\n})\n\nexport const premiumAiRateLimit = new Ratelimit({\n  redis,\n  limiter: Ratelimit.slidingWindow(100, '1 m'), // 100 requests per minute for premium\n  analytics: true,\n})\n\nexport async function checkAIUsage(userId: string, isPremium: boolean = false) {\n  const rateLimit = isPremium ? premiumAiRateLimit : aiRateLimit\n  const { success, limit, reset, remaining } = await rateLimit.limit(userId)\n  \n  return {\n    allowed: success,\n    limit,\n    remaining,\n    resetTime: new Date(reset)\n  }\n}\n`},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:687,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:687,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h3,{id:\"caching-strategy\",children:[(0,n.jsxDEV)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#caching-strategy\",children:(0,n.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this),\"Caching Strategy\"]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:722,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.pre,{children:(0,n.jsxDEV)(e.code,{className:\"language-typescript\",children:`// lib/cache/content-cache.ts\nexport class ContentCache {\n  private redis: Redis\n\n  constructor() {\n    this.redis = new Redis(process.env.REDIS_URL!)\n  }\n\n  private getCacheKey(params: GenerationParams): string {\n    const key = {\n      template: params.template.id,\n      topic: params.topic,\n      tone: params.tone,\n      length: params.length,\n      keywords: params.keywords?.sort()\n    }\n    return \\`content:\\${hashObject(key)}\\`\n  }\n\n  async get(params: GenerationParams): Promise<string | null> {\n    const key = this.getCacheKey(params)\n    return await this.redis.get(key)\n  }\n\n  async set(params: GenerationParams, content: string, ttl: number = 3600) {\n    const key = this.getCacheKey(params)\n    await this.redis.setex(key, ttl, content)\n  }\n\n  async invalidatePattern(pattern: string) {\n    const keys = await this.redis.keys(pattern)\n    if (keys.length > 0) {\n      await this.redis.del(...keys)\n    }\n  }\n}\n`},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:723,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:723,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"This AI-powered content generator showcases the integration of advanced AI capabilities with modern web application architecture, demonstrating practical applications of large language models in content creation workflows.\"},void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:762,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\",lineNumber:1,columnNumber:1},this)}function _e(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsxDEV)(e,Object.assign({},r,{children:(0,n.jsxDEV)($,r,void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this)}),void 0,!1,{fileName:\"/Users/benjaminwilliams/Personal_manager_test/drew-hub/content/projects/_mdx_bundler_entry_point-06108dc8-672a-4129-a628-ace9faefffde.mdx\"},this):$(r)}var be=_e;return ue(pe);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "projects/ai-powered-content-generator.mdx",
  "_raw": {
    "sourceFilePath": "projects/ai-powered-content-generator.mdx",
    "sourceFileName": "ai-powered-content-generator.mdx",
    "sourceFileDir": "projects",
    "contentType": "mdx",
    "flattenedPath": "projects/ai-powered-content-generator"
  },
  "type": "Project",
  "slug": "ai-powered-content-generator"
}